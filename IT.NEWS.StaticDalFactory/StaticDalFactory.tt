<#@ template  debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
 
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile =  @"..\\IT.NEWS.Model\Model1.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using IT.NEWS.Dal;
using IT.NEWS.DapperDal;
using IT.NEWS.IDal;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace IT.NEWS.StaticDalFactory
{
    /// <summary>
    /// 抽象工厂封装数据操作类实例创建，然后DBSession调用抽象工厂，修改DBSession
    /// DALFactory数据会话层调数据层不能直接new,要封装一下解耦
    /// </summary>
    public partial class StaticDalFactory
    {
        /// <summary>
        /// 获取程序集配置
        /// </summary>
        static readonly string assemblyName = ConfigurationManager.AppSettings["Factory"];

<#
// Emit Entity Types

	foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>	
		public static I<#=entity.Name#>Dal Get<#=entity.Name#>Dal()
        {
             return Assembly.Load(assemblyName).CreateInstance(assemblyName + ".<#=entity.Name#>Dal") as I<#=entity.Name#>Dal;
        }

<#}#>
	}
}

