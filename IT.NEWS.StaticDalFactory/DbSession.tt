<#@ template  debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
 
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile =  @"..\\IT.NEWS.Model\Model1.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using IT.NEWS.IDal;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace IT.NEWS.Dal
{
	  /// <summary>
    /// 1.数据会话层：就是一个工厂类，负责完成所有数据操作类实例的创建，然后业务层通过数据会话层来获取要操作数据类的实例，
    /// 所以数据会话层将业务层和数据层解耦。
    /// 2.在数据会话层中提供一个方法：完成所有数据的保存。
    /// </summary>
	public partial class DbSession : IDbSession
    {

	    /// <summary>
        /// 拿到当前的上下文，把修改的实体进行整体的提交
        /// </summary>
        /// <returns></returns>
        public  int SaveChanges()
        {
            //  获取当前上下文   保存
            return DbContextFactory.GetDbContext().SaveChanges();
        }
<#
// Emit Entity Types

	foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>	
		I<#=entity.Name#>Dal IDbSession.<#=entity.Name#>Dal
        {
            get 
			{
				return StaticDalFactory.StaticDalFactory.Get<#=entity.Name#>Dal();
			}

            set
            {
                throw new NotImplementedException();
            }
         }

<#}#>
	}
}

